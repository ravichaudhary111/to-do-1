{"version":3,"sources":["List.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","itemList","map","itemObj","className","item","onClick","key","newList","filter","updateItemList","deleteItemFromList","App","useState","currentItem","setCurrentItem","placeholder","value","onChange","e","console","log","target","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAyBeA,MAvBf,SAAcC,GAQV,OACI,8BACKA,EAAMC,SAASC,KAAI,SAAAC,GAEhB,OACI,sBAAuBC,UAAU,OAAjC,UACI,4BAAID,EAAQE,OACZ,wBAAQC,QAAS,kBAbV,SAAAC,GACvB,IAAMC,EAAUR,EAAMC,SAASQ,QAAO,SAAAN,GAClC,OAAOA,EAAQI,MAAQA,KAE3BP,EAAMU,eAAeF,GASkBG,CAAmBR,EAAQI,MAAlD,iBAFMJ,EAAQI,WCqBvBK,MAhCf,WAEE,MAAmCC,mBAAS,IAA5C,mBAAOZ,EAAP,KAAiBS,EAAjB,KACA,EAAsCG,mBAAS,MAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAYA,OACE,qBAAKX,UAAU,MAAf,SAEE,yBAAQA,UAAU,aAAlB,UACE,4CACA,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uBAAOY,YAAY,gBAAgBC,MAAOH,EAAaI,SAjBzC,SAAAC,GACtBC,QAAQC,IAAI,KAAMF,EAAEG,OAAOL,OAC3BF,EAAeI,EAAEG,OAAOL,UAgBhB,wBAAQX,QAbI,WACpBI,EAAe,GAAD,mBAAKT,GAAL,CAAe,CAAEI,KAAMS,EAAaP,IAAKgB,KAAKC,UAC5DJ,QAAQC,IAAI,YAAapB,GACzBc,EAAe,KAUP,kBAEF,cAAC,EAAD,CAAMd,SAAUA,EAAUS,eAAgBA,aCjBrCe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.83ec4571.chunk.js","sourcesContent":["import \"./List.css\";\r\n\r\nfunction List(props) {\r\n\r\n    const deleteItemFromList = key => {\r\n        const newList = props.itemList.filter(itemObj => {\r\n            return itemObj.key !== key;\r\n        });\r\n        props.updateItemList(newList);\r\n    };\r\n    return (\r\n        <div>\r\n            {props.itemList.map(itemObj => {\r\n\r\n                return (\r\n                    <div key={itemObj.key} className=\"item\">\r\n                        <p>{itemObj.item}</p>\r\n                        <button onClick={() => deleteItemFromList(itemObj.key)}>X</button>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default List;","import './App.css';\nimport { useState } from \"react\"\nimport List from \"./List\"\n\nfunction App() {\n\n  const [itemList, updateItemList] = useState([]);\n  const [currentItem, setCurrentItem] = useState(null);\n\n  const onChangeHandler = e => {\n    console.log(\"cv\", e.target.value);\n    setCurrentItem(e.target.value);\n  };\n\n  const addItemToList = () => {\n    updateItemList([...itemList, { item: currentItem, key: Date.now() }]);\n    console.log(\"list item\", itemList);\n    setCurrentItem(\"\");\n  };\n  return (\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n        <h1 >To-Do List</h1>\n        <div className=\"wrapper\">\n          <div className=\"Input-wrapper\">\n            <input placeholder=\"Add item here\" value={currentItem} onChange={onChangeHandler} />\n            <button onClick={addItemToList}>+</button>\n          </div>\n          <List itemList={itemList} updateItemList={updateItemList} />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}